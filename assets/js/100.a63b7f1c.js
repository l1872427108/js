(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{499:function(a,t,r){"use strict";r.r(t);var _=r(56),s=Object(_.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),r("h3",{attrs:{id:"有哪些数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#有哪些数据类型"}},[a._v("#")]),a._v(" 有哪些数据类型？")]),a._v(" "),r("p",[a._v("基础类型(原始数据类型):")]),a._v(" "),r("ol",[r("li",[r("p",[a._v("数字 number (整数或浮点数)")])]),a._v(" "),r("li",[r("p",[a._v("字符串 string")])]),a._v(" "),r("li",[r("p",[a._v("布尔值 boolean")])]),a._v(" "),r("li",[r("p",[a._v("null 表示空")])]),a._v(" "),r("li",[r("p",[a._v("undefined 为定义")])]),a._v(" "),r("li",[r("p",[a._v("Symbol 独一无二的值")])]),a._v(" "),r("li",[r("p",[a._v("任意精度整数 bigint   1234n")])])]),a._v(" "),r("p",[a._v("复合类型（引用类型） Object")]),a._v(" "),r("ol",[r("li",[a._v("对象 object")]),a._v(" "),r("li",[a._v("数组 []")]),a._v(" "),r("li",[a._v("函数 function")]),a._v(" "),r("li",[a._v("文档对象 document")]),a._v(" "),r("li",[a._v("Math")]),a._v(" "),r("li",[a._v("正则 //")]),a._v(" "),r("li",[a._v("Date")]),a._v(" "),r("li",[a._v("Error")])]),a._v(" "),r("h3",{attrs:{id:"内存图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内存图"}},[a._v("#")]),a._v(" 内存图")]),a._v(" "),r("p",[a._v("js 把内存分为代码区和数据区。 数据区又分为 stack（栈）和 heap（堆）。")]),a._v(" "),r("h3",{attrs:{id:"栈内存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈内存"}},[a._v("#")]),a._v(" 栈内存")]),a._v(" "),r("h5",{attrs:{id:"_1-原始类型直接存放在栈中。-存放真实的数据-如果是不同的值会存法规不同的栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-原始类型直接存放在栈中。-存放真实的数据-如果是不同的值会存法规不同的栈"}},[a._v("#")]),a._v(" 1. 原始类型直接存放在栈中。(存放真实的数据), 如果是不同的值会存法规不同的栈.")]),a._v(" "),r("img",{attrs:{width:"200",height:"200",src:"/内存图2.png",alt:"内存图"}}),a._v(" "),r("h5",{attrs:{id:"_2-如果-b-a-那么会直接把-a-的值给了-b。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-如果-b-a-那么会直接把-a-的值给了-b。"}},[a._v("#")]),a._v(" 2. 如果 b = a; 那么会直接把 a 的值给了 b。")]),a._v(" "),r("img",{attrs:{width:"200",height:"200",src:"/js/内存图1.png",alt:"内存图"}}),a._v(" "),r("h5",{attrs:{id:"_3-栈中的特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-栈中的特点"}},[a._v("#")]),a._v(" 3. 栈中的特点")]),a._v(" "),r("p",[a._v("存放一些简单的数据，占据的空间小，大小固定，属于被频繁使用数据，所以放入栈中存储。")]),a._v(" "),r("h3",{attrs:{id:"堆内存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆内存"}},[a._v("#")]),a._v(" 堆内存")]),a._v(" "),r("h5",{attrs:{id:"_1-在栈中存放地址-然后指向堆内存中的数据。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-在栈中存放地址-然后指向堆内存中的数据。"}},[a._v("#")]),a._v(" 1. 在栈中存放地址，然后指向堆内存中的数据。")]),a._v(" "),r("img",{attrs:{width:"600",height:"300",src:"/js/内存图3.png",alt:"内存图"}}),a._v(" "),r("h5",{attrs:{id:"_2-如果-arr1-arr2-那么是把-arr2-地址给了-arr1。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-如果-arr1-arr2-那么是把-arr2-地址给了-arr1。"}},[a._v("#")]),a._v(" 2. 如果 arr1 = arr2; 那么是把 arr2 地址给了 arr1。")]),a._v(" "),r("img",{attrs:{width:"600",height:"300",src:"/js/内存图4.png",alt:"内存图"}}),a._v(" "),r("h5",{attrs:{id:"_3-堆中的特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-堆中的特点"}},[a._v("#")]),a._v(" 3. 堆中的特点")]),a._v(" "),r("p",[a._v("堆中存储的对象，占据空间大、大小不固定。引用数据类型在栈中存储了指针, 指针指向了堆中该实体的地址，当解释器去寻找引用值时，首次会先去栈中查找地址，然后从堆中获取实体。")]),a._v(" "),r("p",[a._v("在堆中存放的数据大，占用内存多，不是频繁访问的数据。")])])}),[],!1,null,null,null);t.default=s.exports}}]);