(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{421:function(t,a,r){"use strict";r.r(a);var s=r(56),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"var-let-const"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#var-let-const"}},[t._v("#")]),t._v(" var let const")]),t._v(" "),r("h3",{attrs:{id:"var"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),r("ol",[r("li",[t._v("var 声明的变量可以进行变量提升, 会将声明和赋值分成两个。")]),t._v(" "),r("li",[t._v("var 可以重复声明。")]),t._v(" "),r("li",[t._v("var 在非函数作用域中定义是挂在到 window 上的。")])]),t._v(" "),r("h3",{attrs:{id:"let"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" let")]),t._v(" "),r("ol",[r("li",[t._v("let 声明的变量具有块作用域的特征。")]),t._v(" "),r("li",[t._v("在同一个块级作用域，不能重复声明变量。")]),t._v(" "),r("li",[t._v("let 声明的变量不存在变量提升, 暂时性死区.")])]),t._v(" "),r("h3",{attrs:{id:"const"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),r("ol",[r("li",[t._v("const 具备 let 声明的特点。")]),t._v(" "),r("li",[t._v("一旦定义后，就不能修改. 创建一个值的只读引用, 但是值的内部内容是可变的。")]),t._v(" "),r("li",[t._v("const 声明必须设置初始值。")])])])}),[],!1,null,null,null);a.default=v.exports}}]);