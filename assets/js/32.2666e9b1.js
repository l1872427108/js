(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{433:function(t,e,v){"use strict";v.r(e);var a=v(56),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"事件冒泡和事件捕获"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡和事件捕获"}},[t._v("#")]),t._v(" 事件冒泡和事件捕获")]),t._v(" "),v("h3",{attrs:{id:"冒泡"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#冒泡"}},[t._v("#")]),t._v(" 冒泡")]),t._v(" "),v("p",[t._v("当一个事件发生在一个元素上，它会首先运行在该元素上的处理程序，然后运行器父元素上的处理程序，然后一直向上到祖先节点上处理。")]),t._v(" "),v("p",[t._v("注意：几乎所有的事件都是可以冒泡的， focus事件不会冒泡。")]),t._v(" "),v("h3",{attrs:{id:"停止冒泡"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#停止冒泡"}},[t._v("#")]),t._v(" 停止冒泡")]),t._v(" "),v("p",[t._v("event.stopPropagation(); 我们不想要向上冒泡时，我们可以使用它来停止冒泡。")]),t._v(" "),v("h3",{attrs:{id:"捕获"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#捕获"}},[t._v("#")]),t._v(" 捕获")]),t._v(" "),v("p",[t._v("另一个事件处理的阶段是 捕获。")]),t._v(" "),v("p",[t._v("DOM 事件由三个阶段:")]),t._v(" "),v("ol",[v("li",[t._v("捕获阶段。 事件从 window 向下走进元素。")]),t._v(" "),v("li",[t._v("目标阶段 事件达到目标元素。")]),t._v(" "),v("li",[t._v("冒泡阶段， 事件从元素上开始冒泡。")])]),t._v(" "),v("p",[t._v("点击一个元素，就会经历三个阶段，先从祖先向下到达元素，然后达到目标（目标阶段），最后上升, 在途中调用处理程序。")]),t._v(" "),v("p",[t._v("使用 on、addEventListener 添加的处理程序，都只是在第二阶段第三阶段运行。")]),t._v(" "),v("p",[t._v("我们可以设置 addEventListener(w..., {capture: true});")]),t._v(" "),v("ol",[v("li",[t._v("如果为 false（默认值），则在冒泡阶段设置处理程序。")]),t._v(" "),v("li",[t._v("如果为 true，则在捕获阶段设置处理程序。")])]),t._v(" "),v("h3",{attrs:{id:"removeeventlistener"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#removeeventlistener"}},[t._v("#")]),t._v(" removeEventListener")]),t._v(" "),v("p",[t._v("用来移除处理程序, 需要在同一阶段才可以。 要么都为 true.")])])}),[],!1,null,null,null);e.default=r.exports}}]);