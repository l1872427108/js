(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{462:function(t,s,e){"use strict";e.r(s);var a=e(56),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"对象的浅拷贝方法区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象的浅拷贝方法区别"}},[t._v("#")]),t._v(" 对象的浅拷贝方法区别")]),t._v(" "),e("p",[t._v("对于对象的浅拷贝有两种方式。")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Object.assign")])]),t._v(" "),e("li",[e("p",[t._v("扩展运算符")])])]),t._v(" "),e("h3",{attrs:{id:"二者的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二者的区别"}},[t._v("#")]),t._v(" 二者的区别")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Object.assign 方法接收第一个参数作为目标对象，后面的所有参数作为源对象。然后把所有\n的源对象合并到目标对象中。它会修改一个对象。因此会触发 setter。")])]),t._v(" "),e("li",[e("p",[t._v("扩展运算符，数组或对象中的每一个值都会被拷贝到一个新的对象或数组中去。\n它不复制继承的属性或类的属性，但是会复制 ES6 的 symbol 属性。")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);